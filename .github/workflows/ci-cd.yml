name: PNG Road Monitor CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'
  BUN_VERSION: 'latest'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ env.BUN_VERSION }}

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Run ESLint
      run: bun run lint

    - name: Run type checking
      run: bun run type-check

    - name: Run tests
      run: bun run test
      env:
        DATABASE_URL: "file:./test.db"
        NEXTAUTH_SECRET: "test-secret-key-for-ci"
        NEXTAUTH_URL: "http://localhost:3000"

  build:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ env.BUN_VERSION }}

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Generate Prisma Client
      run: bunx prisma generate

    - name: Build application
      run: bun run build
      env:
        DATABASE_URL: "file:./build.db"
        NEXTAUTH_SECRET: "build-secret-key"
        NEXTAUTH_URL: "http://localhost:3000"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: bun audit

    - name: Check for vulnerable dependencies
      run: bun run security-check || true

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here

  deploy-production:
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
